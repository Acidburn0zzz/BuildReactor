import BambooService from 'core/services/bamboo/buildService';
import BuildBotService from 'core/services/buildbot/buildService';
import BuildKiteService from 'services/buildkite/buildkite';
import CctrayService from 'core/services/cctray/buildService';
import CruiseControlNetService from 'core/services/cruisecontrol.net/buildService';
import CruiseControlRBService from 'core/services/cruisecontrol.rb/buildService';
import CruiseControlService from 'core/services/cruisecontrol/buildService';
import GoService from 'core/services/go/buildService';
import JenkinsService from 'core/services/jenkins/buildService';
import SnapService from 'core/services/snap/buildService';
import TeamCityService from 'core/services/teamcity/buildService';
import TravisService from 'core/services/travis/buildService';
import badgeController from 'core/badgeController';
import chromeListeners from 'core/chromeListeners';
import logger from 'core/logger';
import notificationController from 'core/notificationController';
import passwordExpiredHandler from 'core/passwordExpiredHandler';
import serviceConfiguration from 'core/config/serviceConfiguration';
import serviceController from 'core/services/serviceController';
import serviceTypes from 'core/services/serviceTypes';
import serviceView from 'core/services/serviceView';
import viewConfiguration from 'core/config/viewConfiguration';

serviceConfiguration.init();
viewConfiguration.init();
logger.init();
badgeController.init();
notificationController.init({ timeout: 5000 });
serviceView.init();
chromeListeners.init();
passwordExpiredHandler.init();

serviceTypes.clear();
serviceTypes.register(BambooService);
serviceTypes.register(BuildBotService);
serviceTypes.register(BuildKiteService);
serviceTypes.register(CctrayService);
serviceTypes.register(CruiseControlService);
serviceTypes.register(CruiseControlNetService);
serviceTypes.register(CruiseControlRBService);
serviceTypes.register(GoService);
serviceTypes.register(JenkinsService);
serviceTypes.register(SnapService);
serviceTypes.register(TeamCityService);
serviceTypes.register(TravisService);

serviceController.start(serviceConfiguration.changes);
